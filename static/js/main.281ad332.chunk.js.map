{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetcher","url","a","fetch","res","ok","Error","statusText","json","getYear","launch","Date","date_unix","getUTCFullYear","App","useSWR","launches","data","mutate","launchYears","Set","map","useState","NaN","filterYear","setFilterYear","className","onClick","onChange","ev","Number","currentTarget","value","data-testid","year","filter","name","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAIeA,E,8EAAf,WAAuBC,GAAvB,eAAAC,EAAA,sEACmBC,MAAMF,GADzB,WACOG,EADP,QAEUC,GAFV,sBAGQ,IAAIC,MAAMF,EAAIG,YAHtB,uBAKcH,EAAII,OALlB,oF,sBAQA,SAASC,EAAQC,GAChB,OAAO,IAAIC,KAAwB,IAAnBD,EAAOE,WAAkBC,iBAwC3BC,MArCf,WAAgB,IAAD,EACqBC,YAClC,yCACAf,GAFagB,EADA,EACNC,KAAgBC,EADV,EACUA,OAKlBC,EAAc,IAAIC,IAAJ,OAAQJ,QAAR,IAAQA,OAAR,EAAQA,EAAUK,IAAIZ,IAN5B,EAQsBa,mBAAiBC,KARvC,mBAQPC,EARO,KAQKC,EARL,KAUd,OACC,qBAAKC,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACC,wBAAQC,QAAS,kBAAMT,KAAvB,oBACA,yBACCU,SAAU,SAACC,GAAD,OAAQJ,EAAcK,OAAOD,EAAGE,cAAcC,SACxDC,cAAY,eAFb,UAIC,oDACC,YAAId,GAAaE,KAAI,SAACa,GAAD,OACrB,wBAAmBF,MAAOE,EAA1B,SACEA,GADWA,SAKf,oCACElB,QADF,IACEA,OADF,EACEA,EACEmB,QAAO,SAACzB,GAAD,OAAac,GAAcf,EAAQC,KAAYc,KACvDH,KAAI,SAACX,GAAD,OACJ,6BAAqBA,EAAO0B,MAAnB1B,EAAO2B,eC/BRC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.281ad332.chunk.js","sourcesContent":["import { useState } from 'react';\nimport useSWR from 'swr';\nimport './App.css';\n\nasync function fetcher(url: string) {\n\tconst res = await fetch(url);\n\tif (!res.ok) {\n\t\tthrow new Error(res.statusText);\n\t}\n\treturn await res.json();\n}\n\nfunction getYear(launch: { date_unix: number }) {\n\treturn new Date(launch.date_unix * 1000).getUTCFullYear();\n}\n\nfunction App() {\n\tconst { data: launches, mutate } = useSWR<{ id: string; name: string; date_unix: number }[]>(\n\t\t'https://api.spacexdata.com/v4/launches',\n\t\tfetcher,\n\t);\n\n\tconst launchYears = new Set(launches?.map(getYear));\n\n\tconst [filterYear, setFilterYear] = useState<number>(NaN);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<button onClick={() => mutate()}>Reload</button>\n\t\t\t\t<select\n\t\t\t\t\tonChange={(ev) => setFilterYear(Number(ev.currentTarget.value))}\n\t\t\t\t\tdata-testid=\"filterByYear\"\n\t\t\t\t>\n\t\t\t\t\t<option>Filter by Year</option>\n\t\t\t\t\t{[...launchYears].map((year) => (\n\t\t\t\t\t\t<option key={year} value={year}>\n\t\t\t\t\t\t\t{year}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t))}\n\t\t\t\t</select>\n\t\t\t\t<ol>\n\t\t\t\t\t{launches\n\t\t\t\t\t\t?.filter((launch) => !filterYear || getYear(launch) === filterYear)\n\t\t\t\t\t\t.map((launch) => (\n\t\t\t\t\t\t\t<li key={launch.id}>{launch.name}</li>\n\t\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}